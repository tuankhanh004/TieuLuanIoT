#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN D4       // Ch√¢n SDA c·ªßa RFID (GPIO2)
#define RST_PIN D3      // Ch√¢n RST c·ªßa RFID (GPIO0)
#define BUZZER_PIN D8   // Ch√¢n c√≤i (GPIO15)
#define GAS_SENSOR A0   // C·∫£m bi·∫øn kh√≠ gas (analog)

MFRC522 rfid(SS_PIN, RST_PIN);
int failedAttempts = 0;
const int maxFailedAttempts = 3;

// UID h·ª£p l·ªá (th·∫ª ƒë√∫ng)
byte validUID[] = {0x2C, 0x2F, 0x16, 0x05}; // <--- FIX: thi·∫øu d·∫•u ;

bool isSameUID(byte *a, byte *b, byte len) {
  for (byte i = 0; i < len; i++) {
    if (a[i] != b[i]) return false;
  }
  return true;
}

void setup() {
  Serial.begin(115200);
  SPI.begin();
  rfid.PCD_Init();
  pinMode(BUZZER_PIN, OUTPUT);
  digitalWrite(BUZZER_PIN, LOW);
  Serial.println("üîê H·ªá th·ªëng ki·ªÉm so√°t RFID + Gas ƒë√£ kh·ªüi ƒë·ªông");
}

void loop() {
  // ƒê·ªçc c·∫£m bi·∫øn kh√≠ gas
  int gasValue = analogRead(GAS_SENSOR);
  Serial.print("N·ªìng ƒë·ªô kh√≠ gas: ");
  Serial.println(gasValue);
  delay(1000);

  // N·∫øu n·ªìng ƒë·ªô v∆∞·ª£t ng∆∞·ª°ng c·∫£nh b√°o
  if (gasValue > 400 ) {
    digitalWrite(BUZZER_PIN, HIGH);
    Serial.println("‚ö†Ô∏è C·∫£nh b√°o: Ph√°t hi·ªán kh√≠ gas!");
    delay(500); // Delay tr√°nh h√∫ li√™n t·ª•c
    return;
  } else {
    digitalWrite(BUZZER_PIN, LOW);
  }

  // Ki·ªÉm tra n·∫øu c√≥ th·∫ª m·ªõi
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) {
    return;
  }

  byte readUID[4];
  for (byte i = 0; i < 4; i++) {
    readUID[i] = rfid.uid.uidByte[i];
  }

  // So s√°nh UID
  if (isSameUID(readUID, validUID, 4)) {
    Serial.println("‚úÖ Truy c·∫≠p h·ª£p l·ªá!");
    failedAttempts = 0;
    beepSuccess();
  } else {
    Serial.println("‚ùå Truy c·∫≠p b·ªã t·ª´ ch·ªëi!");
    failedAttempts++;
    beepError();

    if (failedAttempts >= maxFailedAttempts) {
      beepAlert();
    }
  }

  // Ng·∫Øt k·∫øt n·ªëi th·∫ª
  rfid.PICC_HaltA();
  delay(500);
}

// C√≤i b√°o th√†nh c√¥ng
void beepSuccess() {
  tone(BUZZER_PIN, 1500, 200);
  delay(200);
}

// C√≤i b√°o sai
void beepError() {
  for (int i = 0; i < 2; i++) {
    tone(BUZZER_PIN, 1000, 200);
    delay(300);
  }
}

// C√≤i c·∫£nh b√°o sai qu√° s·ªë l·∫ßn
void beepAlert() {
  for (int i = 0; i < 5; i++) {
    tone(BUZZER_PIN, 800, 400);
    delay(500);
  }
}
